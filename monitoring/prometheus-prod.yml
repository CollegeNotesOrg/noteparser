# Prometheus configuration for noteparser production monitoring

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'noteparser-prod'
    environment: 'production'

# Rules and alerting
rule_files:
  - "/etc/prometheus/rules/*.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Main noteparser application
  - job_name: 'noteparser-app'
    static_configs:
      - targets: ['noteparser:8000']
    scrape_interval: 10s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # AI Services
  - job_name: 'ragflow-service'
    static_configs:
      - targets: ['ragflow:8010']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'ragflow'

  - job_name: 'deepwiki-service'
    static_configs:
      - targets: ['deepwiki:8011']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'deepwiki'

  - job_name: 'dolphin-service'
    static_configs:
      - targets: ['dolphin:8012']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'dolphin'

  - job_name: 'langextract-service'
    static_configs:
      - targets: ['langextract:8013']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'langextract'

  # Infrastructure components
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:9113']
    scrape_interval: 30s
    metrics_path: /metrics

  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metrics_path: /metrics

  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    metrics_path: /metrics

  # Vector databases
  - job_name: 'qdrant'
    static_configs:
      - targets: ['qdrant:6333']
    scrape_interval: 30s
    metrics_path: /metrics

  - job_name: 'weaviate'
    static_configs:
      - targets: ['weaviate:8080']
    scrape_interval: 30s
    metrics_path: /v1/metrics

  # Node exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: /metrics

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics

  # Application-specific health checks
  - job_name: 'health-checks'
    static_configs:
      - targets:
        - 'noteparser:8000'
        - 'ragflow:8010'
        - 'deepwiki:8011'
        - 'dolphin:8012'
        - 'langextract:8013'
    scrape_interval: 60s
    metrics_path: /health
    params:
      format: ['prometheus']

# Remote write configuration (optional - for external monitoring)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint/api/v1/write"
#     headers:
#       Authorization: "Bearer YOUR_TOKEN"

# Remote read configuration (optional)
# remote_read:
#   - url: "https://prometheus-remote-read-endpoint/api/v1/read"
#     headers:
#       Authorization: "Bearer YOUR_TOKEN"

# Storage configuration
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 30d
    retention.size: 50GB
    wal-compression: true

# Feature flags
feature_flags:
  - web.enable-remote-shutdown
  - web.enable-lifecycle
  - web.enable-admin-api

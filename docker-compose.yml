version: '3.8'

services:
  # Core noteparser service
  noteparser:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: noteparser-core
    ports:
      - "5000:5000"
    environment:
      - NOTEPARSER_ENV=development
      # Connect to ai-services infrastructure
      - DATABASE_URL=postgresql://noteparser:noteparser@host.docker.internal:5434/noteparser
      - REDIS_URL=redis://host.docker.internal:6380/0
      # AI Services URLs
      - RAGFLOW_URL=http://host.docker.internal:8010
      - DEEPWIKI_URL=http://host.docker.internal:8011
      - QDRANT_URL=http://host.docker.internal:6333
      - WEAVIATE_URL=http://host.docker.internal:8080
    volumes:
      - ./src:/app/src
      - ./data:/app/data
      - noteparser-uploads:/app/uploads
    networks:
      - noteparser-network
    restart: unless-stopped
    # Use host networking to access ai-services
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Elasticsearch for search (noteparser-specific)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: noteparser-elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - noteparser-network
    restart: unless-stopped

  # Kibana for monitoring
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: noteparser-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - noteparser-network
    restart: unless-stopped

  # API Gateway (Kong) for noteparser APIs
  kong:
    image: kong:3.4-alpine
    container_name: noteparser-kong
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-db
      - KONG_PG_DATABASE=kong
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
    ports:
      - "8000:8000"  # Proxy port
      - "8001:8001"  # Admin API
    depends_on:
      - kong-db
    networks:
      - noteparser-network
    restart: unless-stopped

  # Kong database
  kong-db:
    image: postgres:16-alpine
    container_name: noteparser-kong-db
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_PASSWORD=kong
      - POSTGRES_DB=kong
    volumes:
      - kong-db-data:/var/lib/postgresql/data
    networks:
      - noteparser-network
    restart: unless-stopped

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: noteparser-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - noteparser-network
    restart: unless-stopped

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: noteparser-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana-dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - noteparser-network
    restart: unless-stopped

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: noteparser-jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"  # Jaeger UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
    networks:
      - noteparser-network
    restart: unless-stopped

networks:
  noteparser-network:
    driver: bridge

volumes:
  elastic-data:
  kong-db-data:
  prometheus-data:
  grafana-data:
  noteparser-uploads: